{"version":3,"sources":["components/Dialogs/DialogItem.jsx","components/Dialogs/DialogsContainer.jsx","components/hoc/withAuthRedirect.jsx"],"names":["DialogItem","id","name","path","to","maxLength300","maxLengthCreator","AddMessageFormReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","component","Textarea","placeholder","validate","required","DialogsContainer","compose","connect","state","messages","dialogsPage","dialogs","sendMessageCreator","Component","RedirectComponent","React","render","this","props","isAuth","auth","WrapDialogs","DialogsItems","map","d","BossMessages","m","message","values","newMessageBody","styled","div"],"mappings":"sLAGO,MAAMA,EAAa,EAAGC,KAAIC,WAC/B,IAAIC,EAAO,YAAcF,EAEzB,OACE,8BACE,cAAC,IAAD,CAASG,GAAID,EAAb,SAAoBD,O,qcCG1B,MAAMG,EAAeC,YAAiB,KA8ChCC,EAA0BC,YAAU,CACxCC,KAAM,wBADwBD,EAlBT,EAAGE,kBAEtB,uBAAMC,SAAUD,EAAhB,UACE,8BACE,cAACE,EAAA,EAAD,CACEC,UAAWC,IACXC,YAAa,qBACbb,KAAM,iBACNc,SAAU,CAACC,IAAUZ,OAGzB,8BACE,wDAUFa,EAAmBC,YACvBC,aACGC,IAAD,CACEC,SAAUD,EAAME,YAAYD,SAC5BE,QAASH,EAAME,YAAYC,WAE7B,CAAEC,0BC/D2BC,IAC/B,MAAMC,UAA0BC,IAAMF,UACpCG,SACE,OAAKC,KAAKC,MAAMC,OAET,cAACN,EAAD,eAAeI,KAAKC,QAFI,cAAC,IAAD,CAAU3B,GAAG,YAUhD,OAJiCgB,aAASC,IAAD,CACvCW,OAAQX,EAAMY,KAAKD,UADYZ,CAE7BO,KD8CmBR,EAhDV,EAAGM,qBAAoBD,UAASF,cAM3C,eAACY,EAAD,WACE,cAACC,EAAD,UACGX,EAAQY,KAAKC,GACZ,cAACrC,EAAD,CAAYE,KAAMmC,EAAEnC,KAAiBD,GAAIoC,EAAEpC,IAAZoC,EAAEpC,QAIrC,eAACqC,EAAD,WACGhB,EAASc,KAAKG,GACb,8BAAiBA,EAAEC,SAATD,EAAEtC,MAGd,8BACE,cAACM,EAAD,CAAyBI,SAlBV8B,IACrBhB,EAAmBgB,EAAOC,6BAyDxBR,EAAcS,IAAOC,IAAV,KAKXT,EAAeQ,IAAOC,IAAV,KAQZN,EAAeK,IAAOC,IAAV,KAIH1B","file":"static/js/5.096684da.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const DialogItem = ({ id, name }) => {\r\n  let path = \"/dialogs/\" + id;\r\n\r\n  return (\r\n    <div>\r\n      <NavLink to={path}>{name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { DialogItem } from \"./DialogItem\";\r\nimport styled from \"@emotion/styled\";\r\nimport { sendMessageCreator } from \"@redux/dialogs-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"@hoc\";\r\nimport { compose } from \"redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required, maxLengthCreator } from \"@utils/validators\";\r\nimport { Textarea } from \"@common/FormsControl\";\r\n\r\nconst maxLength300 = maxLengthCreator(300);\r\n\r\nconst Dialog = ({ sendMessageCreator, dialogs, messages }) => {\r\n  const addNewMessage = (values) => {\r\n    sendMessageCreator(values.newMessageBody);\r\n  };\r\n\r\n  return (\r\n    <WrapDialogs>\r\n      <DialogsItems>\r\n        {dialogs.map((d) => (\r\n          <DialogItem name={d.name} key={d.id} id={d.id} />\r\n        ))}\r\n      </DialogsItems>\r\n\r\n      <BossMessages>\r\n        {messages.map((m) => (\r\n          <div key={m.id}>{m.message}</div>\r\n        ))}\r\n\r\n        <div>\r\n          <AddMessageFormReduxForm onSubmit={addNewMessage} />\r\n        </div>\r\n      </BossMessages>\r\n    </WrapDialogs>\r\n  );\r\n};\r\n\r\nconst AddMessageForm = ({ handleSubmit }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          placeholder={\"Enter your message\"}\r\n          name={\"newMessageBody\"}\r\n          validate={[required, maxLength300]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add massage</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormReduxForm = reduxForm({\r\n  form: \"dialogAddMessageForm\",\r\n})(AddMessageForm);\r\n\r\nconst DialogsContainer = compose(\r\n  connect(\r\n    (state) => ({\r\n      messages: state.dialogsPage.messages,\r\n      dialogs: state.dialogsPage.dialogs,\r\n    }),\r\n    { sendMessageCreator }\r\n  ),\r\n  withAuthRedirect\r\n)(Dialog);\r\n\r\nconst WrapDialogs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 2fr 10fr;\r\n`;\r\n\r\nconst DialogsItems = styled.div`\r\n  padding: 10px;\r\n  color: white;\r\n  &:active {\r\n    color: gold;\r\n  }\r\n`;\r\n\r\nconst BossMessages = styled.div`\r\n  padding: 10px;\r\n`;\r\n\r\nexport default DialogsContainer;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  const RedirectComponentConnect = connect((state) => ({\r\n    isAuth: state.auth.isAuth,\r\n  }))(RedirectComponent);\r\n\r\n  return RedirectComponentConnect;\r\n};\r\n"],"sourceRoot":""}