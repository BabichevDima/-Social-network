{"version":3,"sources":["redux/dialogs-reducer.js","redux/users-reducer.js","api/index.js","components/Navbar/Navbar.module.css","serviceWorker.js","redux/sidebar-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","assets/images/Network.png","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/Login/Login.jsx","components/hoc/withReactSuspense.jsx","App.js","index.js","components/common/Preloader.jsx","utils/validators.js","assets/images/Attention.png","components/common/FormsControl.jsx","redux/profile-reducer.js"],"names":["SEND_MESSAGE","initialState","dialogs","id","name","messages","message","dialogsReducer","state","action","type","newMessage","newMessageBody","sendMessageCreator","FOLLOW","UNFOLLOW","SET_USERS","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","SET_CURRENT_PAGE","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","map","u","userId","followed","page","totalCount","filter","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","requestUsers","dispatch","a","usersAPI","getUsers","data","items","follow","resultCode","unfollow","instance","axios","create","baseURL","withCredentials","headers","get","then","response","delete","post","getProfile","console","warn","profileAPI","authAPI","me","login","email","password","rememberMe","logOut","getStatus","updateStatus","status","put","module","exports","Boolean","window","location","hostname","match","SET_USER_DATA","isAuth","setAuthUserData","payload","getAuthUserData","INITIALIZED_SUCCESS","initialized","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","usersPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","Header","loginOut","Wrap","Img","src","Network","alt","onClick","to","styled","div","img","Login","HeaderAPI","Component","render","this","props","HeaderContainer","connect","Navbar","className","s","nav","item","activeClassName","activeLink","active","maxLength30","maxLengthCreator","LoginReduxForm","reduxForm","handleSubmit","error","onSubmit","Field","placeholder","component","Input","validate","required","FieldError","LoginConnect","length","stopSubmit","_error","formData","log","withReactSuspense","fallback","Preloader","ProfileContainer","React","lazy","DialogsContainer","UsersContainer","App","componentDidMount","initializeApp","Wrapper","Content","path","AppContainer","compose","withRouter","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","animation","value","maxLength","Textarea","input","meta","hasError","touched","FieldTextareaError","FieldTextarea","Span","Attention","FieldInputError","FieldInput","textarea","span","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","profile","newPost","p","postId","addPostActionCreator","getUserProfile","setStatus"],"mappings":"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","file":"static/js/main.1feb213f.chunk.js","sourcesContent":["const SEND_MESSAGE = \"network/dialogsPage/SEND-MESSAGE\";\r\n\r\nconst initialState = {\r\n  dialogs: [\r\n    { id: 1, name: \"Dimych\" },\r\n    { id: 2, name: \"Andrew\" },\r\n    { id: 3, name: \"Sveta\" },\r\n    { id: 4, name: \"Sasha\" },\r\n    { id: 5, name: \"Viktor\" },\r\n    { id: 6, name: \"Valera\" },\r\n  ],\r\n  messages: [\r\n    { id: 1, message: \"Hi\" },\r\n    { id: 2, message: \"How is your it-kamasutra?\" },\r\n    { id: 3, message: \"Yo\" },\r\n    { id: 4, message: \"Yo\" },\r\n    { id: 5, message: \"Yo\" },\r\n  ],\r\n};\r\n\r\nexport const dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      const body = action.newMessageBody;\r\n      const newMessage = { id: 6, message: body };\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, newMessage],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({\r\n  type: SEND_MESSAGE,\r\n  newMessageBody,\r\n});\r\n","import { usersAPI } from \"@api\";\r\n\r\nconst FOLLOW = \"network/usersPage/FOLLOW\";\r\nconst UNFOLLOW = \"network/usersPage/UNFOLLOW\";\r\nconst SET_USERS = \"network/usersPage/SET-USERS\";\r\nconst SET_TOTAL_USERS_COUNT = \"network/usersPage/SET-TOTAL-USERS-COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"network/usersPage/TOGGLE-IS-FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS =\r\n  \"network/usersPage/TOGGLE-IS-FOLLOWING-PROGRESS\";\r\nconst SET_CURRENT_PAGE = \"network/usersPage/SET-CURRENT-PAGE\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: true,\r\n  followingInProgress: [],\r\n};\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((u) => {\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: true };\r\n          }\r\n          return u;\r\n        }),\r\n      };\r\n\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((u) => {\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: false };\r\n          }\r\n          return u;\r\n        }),\r\n      };\r\n\r\n    case SET_USERS:\r\n      return { ...state, users: action.users };\r\n\r\n    case SET_CURRENT_PAGE:\r\n      return { ...state, currentPage: action.page };\r\n\r\n    case SET_TOTAL_USERS_COUNT:\r\n      return { ...state, totalUsersCount: action.totalCount };\r\n\r\n    case TOGGLE_IS_FETCHING:\r\n      return { ...state, isFetching: action.isFetching };\r\n\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id != action.userId),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({\r\n  type: FOLLOW,\r\n  userId,\r\n});\r\n\r\nexport const unfollowSuccess = (userId) => ({\r\n  type: UNFOLLOW,\r\n  userId,\r\n});\r\n\r\nexport const setUsers = (users) => ({\r\n  type: SET_USERS,\r\n  users,\r\n});\r\n\r\nexport const setCurrentPage = (page) => ({\r\n  type: SET_CURRENT_PAGE,\r\n  page,\r\n});\r\n\r\nexport const setTotalUsersCount = (totalCount) => ({\r\n  type: SET_TOTAL_USERS_COUNT,\r\n  totalCount,\r\n});\r\n\r\nexport const toggleIsFetching = (isFetching) => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching,\r\n});\r\n\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n  isFetching,\r\n  userId,\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n  dispatch(toggleIsFetching(true));\r\n  dispatch(setCurrentPage(page));\r\n  const data = await usersAPI.getUsers(page, pageSize);\r\n  dispatch(toggleIsFetching(false));\r\n  dispatch(setUsers(data.items));\r\n  dispatch(setTotalUsersCount(data.totalCount));\r\n};\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n  dispatch(toggleFollowingProgress(true, userId));\r\n  const data = await usersAPI.follow(userId);\r\n  if (data.resultCode == 0) {\r\n    dispatch(followSuccess(userId));\r\n  }\r\n  dispatch(toggleFollowingProgress(false, userId));\r\n};\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n  dispatch(toggleFollowingProgress(true, userId));\r\n  const data = await usersAPI.unfollow(userId);\r\n  if (data.resultCode == 0) {\r\n    dispatch(unfollowSuccess(userId));\r\n  }\r\n  dispatch(toggleFollowingProgress(false, userId));\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n  withCredentials: true,\r\n  headers: {\r\n    \"API-KEY\": \"f13c6464-ffc2-4463-bde6-cefac36f4c02\",\r\n  },\r\n});\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage, pageSize) {\r\n    return instance\r\n      .get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then((response) => response.data);\r\n  },\r\n\r\n  unfollow(id) {\r\n    return instance.delete(`follow/${id}`).then((response) => response.data);\r\n  },\r\n\r\n  follow(id) {\r\n    return instance.post(`follow/${id}`, {}).then((response) => response.data);\r\n  },\r\n\r\n  getProfile(userId) {\r\n    console.warn(\"Obsolete method. Please profileAPI object.\");\r\n    return profileAPI.getProfile(userId);\r\n  },\r\n};\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`).then((response) => response.data);\r\n  },\r\n  login(email, password, rememberMe = false) {\r\n    return instance.post(`auth/login`, { email, password, rememberMe });\r\n  },\r\n  logOut() {\r\n    return instance.delete(`auth/login`).then((response) => response.data);\r\n  },\r\n};\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId) {\r\n    return instance.get(`profile/` + userId).then((response) => response.data);\r\n  },\r\n  getStatus(userId) {\r\n    return instance\r\n      .get(`profile/status/` + userId)\r\n      .then((response) => response.data);\r\n  },\r\n  updateStatus(status) {\r\n    return instance\r\n      .put(`profile/status`, { status: status })\r\n      .then((response) => response.data);\r\n  },\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3nZEK\",\"item\":\"Navbar_item__3vQch\",\"example\":\"Navbar_example__1zEcc\",\"activeLink\":\"Navbar_activeLink__3exSW\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initialState = {};\r\n\r\nexport const sidebarReducer = (state = initialState, action) => {\r\n  return state;\r\n};\r\n","import { authAPI } from \"@api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"network/auth/SET-USER-DATA\";\r\n\r\nconst initialState = {\r\n  id: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({\r\n  type: SET_USER_DATA,\r\n  payload: { id, email, login, isAuth },\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n  const data = await authAPI.me();\r\n\r\n  if (data.resultCode === 0) {\r\n    const { id, email, login } = data.data;\r\n    dispatch(setAuthUserData(id, email, login, true));\r\n  }\r\n};\r\n\r\nexport const Login = (email, password, rememberMe) => async (dispatch) => {\r\n  const response = await authAPI.login(email, password, rememberMe);\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getAuthUserData());\r\n  } else {\r\n    const message =\r\n      response.data.messages.length > 0\r\n        ? response.data.messages[0]\r\n        : \"Some error\";\r\n    dispatch(stopSubmit(\"login\", { _error: message }));\r\n  }\r\n};\r\n\r\nexport const loginOut = () => async (dispatch) => {\r\n  const data = await authAPI.logOut();\r\n  if (data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false));\r\n  }\r\n};\r\n","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"network/app/INITIALIZED-SUCCESS\";\r\n\r\nconst initialState = {\r\n  initialized: false,\r\n};\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setInitializedSuccess = () => ({\r\n  type: INITIALIZED_SUCCESS,\r\n});\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n  const promise = await dispatch(getAuthUserData());\r\n  dispatch(setInitializedSuccess());\r\n};\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { sidebarReducer } from \"./sidebar-reducer\";\r\nimport { profileReducer } from \"./profile-reducer\";\r\nimport { dialogsReducer } from \"./dialogs-reducer\";\r\nimport { usersReducer } from \"./users-reducer\";\r\nimport { authReducer } from \"./auth-reducer\";\r\nimport { appReducer } from \"./app-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\n\r\nconst reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  sidebar: sidebarReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer,\r\n});\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n","export default __webpack_public_path__ + \"static/media/Network.7f721bdf.png\";","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Network from \"@assets/Network.png\";\r\n\r\n\r\nexport const Header = ({ isAuth, login, loginOut }) => {\r\n  return (\r\n    <Wrap>\r\n      <Img src={Network} alt=\"Logo\" />\r\n      <Login>\r\n        {isAuth ? (\r\n          <div>\r\n            <div>{login}</div>\r\n            <div>\r\n              <button onClick={loginOut}>Log out</button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <NavLink to={\"/login\"}>Login</NavLink>\r\n        )}\r\n      </Login>\r\n    </Wrap>\r\n  );\r\n};\r\n\r\nconst Wrap = styled.div`\r\n  grid-area: h;\r\n  background-color: #6e6e6e;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst Login = styled.div`\r\n  float: right;\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { Header } from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginOut } from \"@redux/auth-reducer\";\r\n\r\nclass HeaderAPI extends Component {\r\n\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\n\r\nexport const HeaderContainer = connect(\r\n  (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n  }),\r\n  {\r\n    loginOut,\r\n  }\r\n)(HeaderAPI);\r\n","import React from \"react\";\r\nimport s from \"./Navbar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const Navbar = () => {\r\n  return (\r\n    <nav className={s.nav}>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/profile\" activeClassName={s.activeLink}>\r\n          Profile\r\n        </NavLink>\r\n      </div>\r\n      <div className={`${s.item} ${s.active}`}>\r\n        <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>\r\n          Messages\r\n        </NavLink>\r\n      </div>\r\n\r\n      <div className={`${s.item} ${s.active}`}>\r\n        <NavLink to=\"/users\" activeClassName={s.activeLink}>\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n\r\n      <div className={s.item}>\r\n        <span>News</span>\r\n      </div>\r\n      <div className={s.item}>\r\n        <span>Music</span>\r\n      </div>\r\n      <div className={s.item}>\r\n        <span>Settings</span>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required, maxLengthCreator } from \"@utils/validators\";\r\nimport { Input } from \"@common/FormsControl\";\r\nimport { Login } from \"@redux/auth-reducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <Field\r\n          placeholder={\"Email\"}\r\n          name={\"email\"}\r\n          component={Input}\r\n          validate={[required, maxLength30]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field\r\n          placeholder={\"Password\"}\r\n          name={\"password\"}\r\n          type={\"password\"}\r\n          component={Input}\r\n          validate={[required, maxLength30]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field type={\"checkbox\"} name={\"rememberMe\"} component={Input} />\r\n        remember me\r\n      </div>\r\n\r\n      {error && <FieldError>{error}</FieldError>}\r\n\r\n      <div>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n  form: \"login\",\r\n})(LoginForm);\r\n\r\nexport const Log = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.Login(formData.email, formData.password, formData.rememberMe);\r\n    console.log(formData);\r\n  };\r\n\r\n  if (props.isAuth) return <Redirect to={\"/profile\"} />;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const LoginConnect = connect(\r\n  (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n  }),\r\n  { Login }\r\n)(Log);\r\n\r\nconst FieldError = styled.div`\r\n  color: red;\r\n  padding-left: 3px;\r\n`;\r\n","import React, { Suspense } from \"react\";\r\nimport { Preloader } from \"@common/Preloader\";\r\n\r\nexport const withReactSuspense = (Component) => {\r\n  return (props) => {\r\n    return (\r\n      <Suspense fallback={<Preloader />}>\r\n        <Component {...props} />\r\n      </Suspense>\r\n    );\r\n  };\r\n};\r\n","import React, { Component, Suspense } from \"react\";\r\nimport \"./App.css\";\r\nimport { HeaderContainer } from \"./components/Header\";\r\nimport { Navbar } from \"./components/Navbar\";\r\n\r\n// import { ProfileContainer } from \"./components/Profile\";\r\n// import { DialogsContainer } from \"./components/Dialogs\";\r\n// import { UsersContainer } from \"./components/Users\";\r\n\r\nimport { Route, withRouter } from \"react-router-dom\";\r\nimport styled from \"@emotion/styled\";\r\nimport { LoginConnect } from \"./components/Login\";\r\nimport { initializeApp } from \"@redux/app-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { Preloader } from \"./components/common/Preloader\";\r\nimport { withReactSuspense } from \"./components/hoc/withReactSuspense\";\r\n\r\nconst ProfileContainer = React.lazy(() =>\r\n  import(\"./components/Profile/ProfileContainer\")\r\n);\r\nconst DialogsContainer = React.lazy(() =>\r\n  import(\"./components/Dialogs/DialogsContainer\")\r\n);\r\nconst UsersContainer = React.lazy(() =>\r\n  import(\"./components/Users/UsersContainer\")\r\n);\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />;\r\n    }\r\n\r\n    return (\r\n      <Wrapper>\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <Content>\r\n          <Route\r\n            path=\"/dialogs\"\r\n            component={withReactSuspense(DialogsContainer)}\r\n          />\r\n          <Route\r\n            path=\"/profile/:userId?\"\r\n            component={withReactSuspense(ProfileContainer)}\r\n          />\r\n          <Route\r\n            path=\"/users\"\r\n            render={() => {\r\n              return (\r\n                <Suspense fallback={<div>Loading...</div>}>\r\n                  <UsersContainer />\r\n                </Suspense>\r\n              );\r\n            }}\r\n          />\r\n          <Route path=\"/login\" component={withReactSuspense(LoginConnect)} />\r\n        </Content>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport const AppContainer = compose(\r\n  withRouter,\r\n  connect(\r\n    (state) => ({\r\n      initialized: state.app.initialized,\r\n    }),\r\n    {\r\n      initializeApp,\r\n    }\r\n  )\r\n)(App);\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 0 auto;\r\n  display: grid;\r\n  width: 1200px;\r\n  grid-template-areas: \"h h\" \"n c\";\r\n  grid-template-rows: 60px 1fr;\r\n  grid-template-columns: 2fr 10fr;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  grid-area: c;\r\n  background-color: cornflowerblue;\r\n`;\r\n","import * as serviceWorker from \"./serviceWorker\";\r\nimport { store } from \"@redux/redux-store\";\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { AppContainer } from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <AppContainer />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n\r\n\r\n// import React, { Component } from \"react\";\r\n// import \"./App.css\";\r\n// import { HeaderContainer } from \"./components/Header\";\r\n// import { Navbar } from \"./components/Navbar\";\r\n\r\n// // import { ProfileContainer } from \"./components/Profile\";\r\n// // import { DialogsContainer } from \"./components/Dialogs\";\r\n\r\n// import { Route, withRouter } from \"react-router-dom\";\r\n// import styled from \"@emotion/styled\";\r\n// import { UsersContainer } from \"./components/Users\";\r\n// import { LoginConnect } from \"./components/Login\";\r\n// import { initializeApp } from \"@redux/app-reducer\";\r\n// import { connect } from \"react-redux\";\r\n// import { compose } from \"redux\";\r\n// import { Preloader } from \"./components/common/Preloader\";\r\n\r\n// const { ProfileContainer } = React.lazy(() => import(\"./components/Profile\"));\r\n// const { DialogsContainer } = React.lazy(() => import(\"./components/Dialogs\"));\r\n\r\n// class App extends Component {\r\n//   componentDidMount() {\r\n//     this.props.initializeApp();\r\n//   }\r\n//   render() {\r\n//     if (!this.props.initialized) {\r\n//       return <Preloader />;\r\n//     }\r\n\r\n//     return (\r\n//       <Wrapper>\r\n//         <HeaderContainer />\r\n//         <Navbar />\r\n//         <Content>\r\n//           <Route\r\n//             path=\"/dialogs\"\r\n//             render={() => {\r\n//               return (\r\n//                 <React.Suspense fallback={<div>Loading...</div>}>\r\n//                   <DialogsContainer />\r\n//                 </React.Suspense>\r\n//               );\r\n//             }}\r\n//           />\r\n//           <Route\r\n//             path=\"/profile/:userId?\"\r\n//             render={() => {\r\n//               return (\r\n//                 <React.Suspense fallback={<div>Loading...</div>}>\r\n//                   <ProfileContainer />\r\n//                 </React.Suspense>\r\n//               );\r\n//             }}\r\n//           />\r\n//           <Route path=\"/users\" component={UsersContainer} />\r\n//           <Route path=\"/login\" component={LoginConnect} />\r\n//         </Content>\r\n//       </Wrapper>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export const AppContainer = compose(\r\n//   withRouter,\r\n//   connect(\r\n//     (state) => ({\r\n//       initialized: state.app.initialized,\r\n//     }),\r\n//     {\r\n//       initializeApp,\r\n//     }\r\n//   )\r\n// )(App);\r\n\r\n// const Wrapper = styled.div`\r\n//   margin: 0 auto;\r\n//   display: grid;\r\n//   width: 1200px;\r\n//   grid-template-areas: \"h h\" \"n c\";\r\n//   grid-template-rows: 60px 1fr;\r\n//   grid-template-columns: 2fr 10fr;\r\n// `;\r\n\r\n// const Content = styled.div`\r\n//   grid-area: c;\r\n//   background-color: cornflowerblue;\r\n// `;\r\n","import React from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nexport const Preloader = (props) => {\r\n  return (\r\n      <Spinner animation=\"border\" />\r\n  );\r\n};\r\n","export const required = (value) => {\r\n  if (value) return undefined;\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n};\r\n\r\n ","export default __webpack_public_path__ + \"static/media/Attention.50cc6494.png\";","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Attention from \"@assets/Attention.png\";\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n  const hasError = meta.error && meta.touched;\r\n  return (\r\n    <div>\r\n      <div>\r\n        {hasError ? (\r\n          <FieldTextareaError {...input} {...props} />\r\n        ) : (\r\n          <FieldTextarea {...input} {...props} />\r\n        )}\r\n      </div>\r\n      {hasError && (\r\n        <div>\r\n          <Span>\"{meta.error}\"</Span>\r\n          <Img src={Attention} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n  const hasError = meta.error && meta.touched;\r\n  return (\r\n    <div>\r\n      <div>\r\n        {hasError ? (\r\n          <FieldInputError {...input} {...props} />\r\n        ) : (\r\n          <FieldInput {...input} {...props} />\r\n        )}\r\n      </div>\r\n      {hasError && (\r\n        <div>\r\n          <Span>\"{meta.error}\"</Span>\r\n          <Img src={Attention} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FieldTextarea = styled.textarea``;\r\n\r\nconst FieldTextareaError = styled.textarea`\r\n  border: solid 2px red;\r\n`;\r\n\r\nconst FieldInput = styled.input``;\r\n\r\nconst FieldInputError = styled.input`\r\n  border: solid 2px red;\r\n`;\r\n\r\nconst Span = styled.span`\r\n  color: red;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 40px;\r\n  height: 40px;\r\n`;\r\n","import { usersAPI } from \"../api/index\";\r\nimport { profileAPI } from \"../api/index\";\r\n\r\nconst ADD_POST = \"network/profilePage/ADD-POST\";\r\nconst SET_USER_PROFILE = \"network/profilePage/SET-USER-PROFILE\";\r\nconst SET_STATUS = \"network/profilePage/SET-STATUS\";\r\nconst DELETE_POST = \"network/profilePage/DELETE-POST\";\r\n\r\nconst initialState = {\r\n  posts: [\r\n    { id: 1, message: \"Hi, how are you?\", likesCount: 12 },\r\n    { id: 2, message: \"It's my first post\", likesCount: 11 },\r\n    { id: 3, message: \"Blabla\", likesCount: 18 },\r\n    { id: 4, message: \"Dada\", likesCount: 5 },\r\n  ],\r\n  profile: null,\r\n  status: \"\",\r\n};\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      const newPost = {\r\n        id: 5,\r\n        message: action.newPost,\r\n        likesCount: 0,\r\n      };\r\n      return { ...state, posts: [...state.posts, newPost] };\r\n\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((p) => p.id != action.postId),\r\n      };\r\n\r\n    case SET_USER_PROFILE:\r\n      return { ...state, profile: action.payload };\r\n\r\n    case SET_STATUS:\r\n      return { ...state, status: action.status };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addPostActionCreator = (newPost) => ({\r\n  type: ADD_POST,\r\n  newPost,\r\n});\r\n\r\nexport const deletePostActionCreator = (postId) => ({\r\n  type: DELETE_POST,\r\n  postId,\r\n});\r\n\r\nexport const setUsersProfile = (profile) => ({\r\n  type: SET_USER_PROFILE,\r\n  payload: profile,\r\n});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  const data = await usersAPI.getProfile(userId);\r\n  dispatch(setUsersProfile(data));\r\n};\r\n\r\nexport const setStatus = (status) => ({\r\n  type: SET_STATUS,\r\n  status,\r\n});\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n  const data = await profileAPI.getStatus(userId);\r\n  dispatch(setStatus(data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n  const data = await profileAPI.updateStatus(status);\r\n  if (data.resultCode === 0) {\r\n    dispatch(setStatus(status));\r\n  }\r\n};\r\n"],"sourceRoot":""}